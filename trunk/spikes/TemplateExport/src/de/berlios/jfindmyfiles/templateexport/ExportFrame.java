/*
 * ExportFrame.java
 *
 * Created on 23 de Junho de 2008, 22:07
 */
package de.berlios.jfindmyfiles.templateexport;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.util.Hashtable;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;

/**
 *
 * @author  Knitter
 */
public class ExportFrame extends javax.swing.JFrame {

    private Vector<Template> temps;

    /** Creates new form ExportFrame */
    public ExportFrame() {
        temps = new Vector<Template>();
        try {
            startUp();
        } catch (IOException ex) {
            Logger.getLogger(ExportFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        updateDetails();
    }

    private void updateDetails() {
        Template t = (Template) jComboBox1.getSelectedItem();
        if (t != null) {
            System.out.println(t.getFolder() + File.separator + "preview.jpg");
            jlblPreview.setIcon(new ImageIcon(t.getFolder() + File.separator + "preview.jpg"));
            jlblAuthor.setText(t.getAuthor());
            jlblVersion.setText(t.getVersion());
        }
    }

    private void startUp() throws IOException {
        String base = System.getProperty("user.home") + File.separator +
                "jfmf" + File.separator + "templates";
        System.out.println("Trying: " + base);
        File folder = new File(base);
        File[] list;
        int y;
        Properties p;
        if (folder.isDirectory() && folder.exists()) {
            System.out.println("Folder exists");
            File[] templates = folder.listFiles();
            if (templates != null) {
                for (int z = templates.length; z-- > 0;) {
                    if (templates[z].isDirectory()) {
                        list = templates[z].listFiles();
                        if (list != null) {
                            for (y = list.length; y-- > 0;) {
                                if (list[y].getName().equals(templates[z].getName() + ".properties")) {
                                    p = new Properties();
                                    p.load(new FileReader(list[y]));
                                    temps.add(new Template(p.getProperty("name"),
                                            p.getProperty("author"),
                                            p.getProperty("version"),
                                            p.getProperty("type").equals("single") ? 0 : 1,
                                            templates[z]));
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblPreview = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new JComboBox(temps);
        jLabel3 = new javax.swing.JLabel();
        jlblAuthor = new javax.swing.JLabel();
        jlblVersion = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblPreview.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/berlios/jfindmyfiles/templateexport/Bundle"); // NOI18N
        jlblPreview.setText(bundle.getString("ExportFrame.jlblPreview.text")); // NOI18N

        jLabel2.setText(bundle.getString("ExportFrame.jLabel2.text")); // NOI18N

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText(bundle.getString("ExportFrame.jLabel3.text")); // NOI18N

        jlblAuthor.setText(bundle.getString("ExportFrame.jlblAuthor.text")); // NOI18N

        jlblVersion.setText(bundle.getString("ExportFrame.jlblVersion.text")); // NOI18N

        jCheckBox1.setText(bundle.getString("ExportFrame.jCheckBox1.text")); // NOI18N

        jLabel4.setText(bundle.getString("ExportFrame.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblPreview, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblVersion)
                            .addComponent(jlblAuthor)))
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlblAuthor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jlblVersion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    updateDetails();
}//GEN-LAST:event_jComboBox1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jlblAuthor;
    private javax.swing.JLabel jlblPreview;
    private javax.swing.JLabel jlblVersion;
    // End of variables declaration//GEN-END:variables

}
